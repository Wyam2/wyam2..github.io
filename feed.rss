<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
	<channel>
		<title>Wyam2</title>
		<link>https://wyam2.github.io/</link>
		<description />
		<copyright>2021</copyright>
		<pubDate>Sun, 20 Jun 2021 23:14:14 GMT</pubDate>
		<lastBuildDate>Sun, 20 Jun 2021 23:14:14 GMT</lastBuildDate>
		<item>
			<title>Version 2.2.3</title>
			<link>https://wyam2.github.io/blog/version-2.2.3</link>
			<description>&lt;p&gt;Version 2.2.3 is now available.&lt;/p&gt;</description>
			<author>Dave Glick</author>
			<guid>https://wyam2.github.io/blog/version-2.2.3</guid>
			<pubDate>Wed, 27 Feb 2019 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;Version 2.2.3 is now available.&lt;/p&gt;
&lt;h1 id="release-notes"&gt;Release Notes&lt;/h1&gt;
&lt;h2 id="features"&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;New &lt;code&gt;Raw&lt;/code&gt; shortcode useful for escaping inner shortcode syntax&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="refactoring"&gt;Refactoring&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Changes the special nested escape processing instruction for shortcodes from a standard processing instruction to &lt;code&gt;&amp;lt;?* ... ?&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="fixes"&gt;Fixes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Fixes a regression in &lt;code&gt;AutoLink&lt;/code&gt; where a new document was being returned when it shouldn't have been (#786)&lt;/li&gt;
&lt;li&gt;Moved the &lt;code&gt;AutoLink&lt;/code&gt; module in docs to execute after all template processing (#786)&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
		</item>
		<item>
			<title>Version 2.2.2</title>
			<link>https://wyam2.github.io/blog/version-2.2.2</link>
			<description>&lt;p&gt;Version 2.2.2 is now available.&lt;/p&gt;</description>
			<author>Dave Glick</author>
			<guid>https://wyam2.github.io/blog/version-2.2.2</guid>
			<pubDate>Wed, 27 Feb 2019 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;Version 2.2.2 is now available.&lt;/p&gt;
&lt;h1 id="release-notes"&gt;Release Notes&lt;/h1&gt;
&lt;h2 id="features"&gt;Features&lt;/h2&gt;
&lt;?# Raw ?&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;Include&lt;/code&gt; shortcode now tracks what file it's been called from (including nested includes) and attempts to first resolve includes relative to the current file&lt;/li&gt;
&lt;li&gt;Shortcodes are now evaluated recursively and can be nested (but must use the same pre vs. post rendering delimiter as their parent)&lt;/li&gt;
&lt;li&gt;Shortcodes can now be evaluated &lt;em&gt;before&lt;/em&gt; rendering with the &lt;code&gt;&amp;lt;?! ... /?&amp;gt;&lt;/code&gt; syntax as well as after rendering with the existing &lt;code&gt;&amp;lt;?# ... /?&amp;gt;&lt;/code&gt; syntax&lt;/li&gt;
&lt;/ul&gt;
&lt;?#/ Raw ?&gt;
&lt;h2 id="fixes"&gt;Fixes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Temporary workaround for shortcodes not working under certain conditions after HTML processing (#784)&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
		</item>
		<item>
			<title>Version 2.2.1</title>
			<link>https://wyam2.github.io/blog/version-2.2.1</link>
			<description>&lt;p&gt;Version 2.2.1 is now available.&lt;/p&gt;</description>
			<author>Dave Glick</author>
			<guid>https://wyam2.github.io/blog/version-2.2.1</guid>
			<pubDate>Tue, 26 Feb 2019 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;Version 2.2.1 is now available.&lt;/p&gt;
&lt;h1 id="release-notes"&gt;Release Notes&lt;/h1&gt;
&lt;h2 id="features"&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;New &lt;code&gt;Highlight&lt;/code&gt; shortcode&lt;/li&gt;
&lt;li&gt;New &lt;code&gt;YouTube&lt;/code&gt; shortcode&lt;/li&gt;
&lt;li&gt;New &lt;code&gt;Giphy&lt;/code&gt; shortcode&lt;/li&gt;
&lt;li&gt;New &lt;code&gt;CodePen&lt;/code&gt; shortcode&lt;/li&gt;
&lt;li&gt;Improvements to &lt;code&gt;Sass&lt;/code&gt; module processing of &lt;code&gt;&amp;#64;import&lt;/code&gt; including a new &lt;code&gt;.WithImportPath()&lt;/code&gt; delegate that can fine-tune import path locations&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="refactoring"&gt;Refactoring&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Refactored &lt;code&gt;Embed&lt;/code&gt; shortcode to make derived oEmbed shortcodes easier to implement&lt;/li&gt;
&lt;li&gt;Refactored &lt;code&gt;HttpClient&lt;/code&gt; support in &lt;code&gt;ExecutionContext&lt;/code&gt; to work more like &lt;code&gt;HttpClientFactory&lt;/code&gt; by sharing a &lt;code&gt;HttpMessageHandler&lt;/code&gt; instead of a &lt;code&gt;HttpClient&lt;/code&gt; instance&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
		</item>
		<item>
			<title>Version 2.2.0</title>
			<link>https://wyam2.github.io/blog/version-2.2.0</link>
			<description>&lt;p&gt;Version 2.2.0 is now available.&lt;/p&gt;</description>
			<author>Dave Glick</author>
			<guid>https://wyam2.github.io/blog/version-2.2.0</guid>
			<pubDate>Wed, 20 Feb 2019 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;Version 2.2.0 is now available.&lt;/p&gt;
&lt;h1 id="release-notes"&gt;Release Notes&lt;/h1&gt;
&lt;h2 id="breaking-changes"&gt;Breaking Changes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Removes the BookSite recipe and the Velocity theme (#764)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="features"&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Shortcodes! Take a look at &lt;a href="https://wyam.io/docs/concepts/shortcodes"&gt;the docs&lt;/a&gt; for more information (#359)&lt;/li&gt;
&lt;li&gt;New &lt;code&gt;MirrorResources&lt;/code&gt; module to download CDN links and mirror them locally (#781)&lt;/li&gt;
&lt;li&gt;New &lt;code&gt;IMetadata.String()&lt;/code&gt; extension that takes a formatting function to apply if the key exists in the metadata&lt;/li&gt;
&lt;li&gt;New &lt;code&gt;IMetadata.TryGetValue&amp;lt;T&amp;gt;()&lt;/code&gt; method to attempt getting a metadata value, but only if it can be converted/cast to &lt;code&gt;T&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;New &lt;code&gt;IMetadata&lt;/code&gt; extension methods to make generating XML-to-LINQ trees from metadata values easier&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="fixes"&gt;Fixes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Fixed a bug when the &lt;code&gt;Sass&lt;/code&gt; module processes Sass files that have includes which aren't under an &lt;code&gt;input&lt;/code&gt; folder&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="refactoring"&gt;Refactoring&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;New &lt;code&gt;IExecutionContext.HttpClient&lt;/code&gt; and &lt;code&gt;IExecutionContext.GetHttpClient(HttpMessageHandler)&lt;/code&gt; to manage a single shared &lt;code&gt;HttpClient&lt;/code&gt; instance&lt;/li&gt;
&lt;li&gt;New support in &lt;code&gt;Wyam.Testing&lt;/code&gt; and &lt;code&gt;TestExecutionContext&lt;/code&gt; for testing modules that use a &lt;code&gt;HttpClient&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="significant-updates"&gt;Significant Updates&lt;/h1&gt;
&lt;h2 id="shortcodes"&gt;Shortcodes!&lt;/h2&gt;
&lt;p&gt;This is a big new feature with lots of potential. It's a little hard to explain quickly in this blog post, so head over to &lt;a href="https://wyam.io/docs/concepts/shortcodes"&gt;the docs&lt;/a&gt; to learn more. I'm excited about where we'll be able to take shortcodes.&lt;/p&gt;
&lt;h2 id="new-mirrorresources-module"&gt;New &lt;code&gt;MirrorResources&lt;/code&gt; module&lt;/h2&gt;
&lt;p&gt;Sometimes you have a layout or page that references external JavaScript or stylesheets (for example, from a CDN) but you want to serve those files locally. Bundlers like WebPack help with this, but what if you just want mirror those external resources from your own server and don't want to mess with setting up another tool?&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;MirrorResources&lt;/code&gt; module will locate external stylesheet and script references in your code, copy them to an output folder of your choice (&lt;code&gt;mirror&lt;/code&gt; by default), and rewrite those &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt; elements to point to the new local location. You can use it in your own Wyam configurations, though it's not added to the recipes at this time.&lt;/p&gt;
&lt;h2 id="removal-of-booksite-recipe-and-the-velocity-theme"&gt;Removal of BookSite recipe and the Velocity theme&lt;/h2&gt;
&lt;p&gt;The BookSite recipe and it's corresponding Velocity theme have been totally removed from Wyam. I realize this stinks for sites using that recipe, but all the recipes will eventually be merged in v3 (see #668) and while Blog and Docs have enough in common to make merging them fairly easy, BookSite is totally different and I don't see it surviving the merge. Because of that, when combined with the much lower usage numbers, I just don't see the value in spending time continuing to maintain it. If anyone really needs to continue using BookSite, I'd suggest you stay on the most recent version of Wyam that has it (2.1.3), download the code from that release and continue packaging BookSite manually, or port the BookSite code back into a Wyam config file.&lt;/p&gt;
</content:encoded>
		</item>
		<item>
			<title>Version 2.1.3</title>
			<link>https://wyam2.github.io/blog/version-2.1.3</link>
			<description>&lt;p&gt;Version 2.1.3 is now available. This was another bug fix release with a few minor feature enhancements.&lt;/p&gt;</description>
			<author>Dave Glick</author>
			<guid>https://wyam2.github.io/blog/version-2.1.3</guid>
			<pubDate>Tue, 29 Jan 2019 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;Version 2.1.3 is now available. This was another bug fix release with a few minor feature enhancements.&lt;/p&gt;
&lt;h1 id="release-notes"&gt;Release Notes&lt;/h1&gt;
&lt;h2 id="features"&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Updates to the globber and file system abstractions to deal with file system case sensitivity better (#771, thanks &amp;#64;glennawatson)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="fixes"&gt;Fixes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Fixes a possible concurrency bug when adding/removing trace loggers and indenting&lt;/li&gt;
&lt;li&gt;Fixes for URL absolute link validation (#773, thanks &amp;#64;glennawatson)&lt;/li&gt;
&lt;li&gt;Allow the &lt;code&gt;If&lt;/code&gt; module indexer to be accessed without casting (#769, thanks &amp;#64;ociaw)&lt;/li&gt;
&lt;li&gt;Fixed some quirks with the new diagram panning/zooming&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="refactoring"&gt;Refactoring&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Changed line ending behavior for files in the repository and re-normalized line endings to LF (#772, thanks &amp;#64;glennawatson)&lt;/li&gt;
&lt;li&gt;Big performance improvement to the &lt;code&gt;AutoLink&lt;/code&gt; module (#766)&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
		</item>
		<item>
			<title>Version 2.1.2</title>
			<link>https://wyam2.github.io/blog/version-2.1.2</link>
			<description>&lt;p&gt;Version 2.1.2 was just released and I continue to address bug reports and lingering issues before tackling some more large-scale changes. Some of the more notable changes are below, &lt;a href="https://github.com/Wyamio/Wyam/releases/tag/v2.1.2"&gt;click here&lt;/a&gt; for the full release notes.&lt;/p&gt;</description>
			<author>Dave Glick</author>
			<guid>https://wyam2.github.io/blog/version-2.1.2</guid>
			<pubDate>Wed, 16 Jan 2019 00:00:00 GMT</pubDate>
			<content:encoded>&lt;p&gt;Version 2.1.2 was just released and I continue to address bug reports and lingering issues before tackling some more large-scale changes. Some of the more notable changes are below, &lt;a href="https://github.com/Wyamio/Wyam/releases/tag/v2.1.2"&gt;click here&lt;/a&gt; for the full release notes.&lt;/p&gt;
&lt;h1 id="api-diagram-improvements"&gt;API Diagram Improvements&lt;/h1&gt;
&lt;p&gt;The API diagrams generated by the docs recipe have been significantly cleaned up. The directional arrows have been reversed so they now follow more conventional UML standards, and panning/zooming have been added to better support larger diagrams. In addition, some lingering issues such as link behavior in the diagrams has been addressed.&lt;/p&gt;
&lt;p&gt;Before:&lt;/p&gt;
&lt;img src="/assets/img/blog/diagram-before.png" class="img-responsive"&gt;
&lt;p&gt;After:&lt;/p&gt;
&lt;img src="/assets/img/blog/diagram-after.png" class="img-responsive"&gt;
&lt;h1 id="if-module-and-imodulelist-extensions"&gt;If Module And IModuleList Extensions&lt;/h1&gt;
&lt;p&gt;Some work was done to make it easier to manipulate an &lt;code&gt;If&lt;/code&gt; module (for example, to change a recipe). With these changes you can no write code like the following to get an &lt;code&gt;If&lt;/code&gt; module from a pipeline and insert a new module before a specific one:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Pipelines[&amp;quot;TagIndex&amp;quot;].GetFirst&amp;lt;If&amp;gt;()[0].InsertBeforeFirst&amp;lt;WriteFiles&amp;gt;
(
    new MinifyHtml()
);
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id="removal-of-booksite"&gt;Removal Of BookSite&lt;/h1&gt;
&lt;p&gt;The BookSite recipe wasn't removed in this release, but very likely will be removed in the next release. If you have strong thoughts about this, please &lt;a href="https://github.com/Wyamio/Wyam/issues/764"&gt;sound off in the issue&lt;/a&gt; - it's unlikely I'll change course on this one, but I'd like your input regardless.&lt;/p&gt;
&lt;p&gt;I realize this stinks for sites using that recipe, but all the recipes will eventually be merged in v3 and while Blog and Docs have enough in common to make merging them fairly easy, BookSite is totally different and I don't see it surviving the merge. Because of that, when combined with the much lower usage numbers, I just don't see the value in spending time continuing to maintain it. If anyone really needs to continue using BookSite, I'd suggest you stay on the most recent version of Wyam that has it (probably 2.1.2), download the code from that release and continue packaging BookSite manually, or port the BookSite code back into a Wyam config file.&lt;/p&gt;
</content:encoded>
		</item>
		<item>
			<title>Version 2.0</title>
			<link>https://wyam2.github.io/blog/version-2.0</link>
			<description>&lt;p&gt;&lt;a href="https://giphy.com/gifs/excited-ron-paul-its-happening-rl0FOxdz7CcxO"&gt;via GIPHY&lt;/a&gt;&lt;/p&gt;</description>
			<author>Dave Glick</author>
			<guid>https://wyam2.github.io/blog/version-2.0</guid>
			<pubDate>Sat, 24 Nov 2018 00:00:00 GMT</pubDate>
			<content:encoded>&lt;div style="width:100%;height:0;padding-bottom:68%;position:relative;"&gt;&lt;iframe src="https://giphy.com/embed/rl0FOxdz7CcxO" width="100%" height="100%" style="position:absolute" frameBorder="0" class="giphy-embed" allowFullScreen&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;p&gt;&lt;a href="https://giphy.com/gifs/excited-ron-paul-its-happening-rl0FOxdz7CcxO"&gt;via GIPHY&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I'm thrilled to announce the release of Wyam 2.0 for .NET Core. This has been a long time coming. The &lt;a href="https://github.com/Wyamio/Wyam/issues/300"&gt;corresponding issue&lt;/a&gt; dates back to May 2016 and I've been working on it ever since (with the help of our awesome community). There's a few reasons why it's taken so long, the most important being that Wyam uses a whole bunch of dependencies to enable all the various modules, and each of those had to be updated to .NET Standard before we could port the primary Wyam application.&lt;/p&gt;
&lt;p&gt;Please keep an eye out for problems and &lt;a href="https://github.com/Wyamio/Wyam/issues"&gt;report them&lt;/a&gt; if you find any. A lot of work has gone into development and testing for this version, but changing runtimes is always a big shift and it's entirely possible (even likely) some things fell through the cracks. I'll be on the lookout for problems and will address them as quickly as I can.&lt;/p&gt;
&lt;h1 id="what-changed"&gt;What Changed?&lt;/h1&gt;
&lt;p&gt;In reality, not a lot has changed other than the shift to .NET Core and the tooling to support that. I intentionally didn't change any of the underlying architecture for this initial release. Wyam is still shipped as a &lt;a href="https://github.com/Wyamio/Wyam/releases"&gt;ZIP archive&lt;/a&gt; and an &lt;a href="https://www.nuget.org/packages/Wyam/"&gt;old-school NuGet tools package&lt;/a&gt; (mainly for use from &lt;a href="https://cakebuild.net/"&gt;Cake&lt;/a&gt;). I also added a &lt;a href="https://www.nuget.org/packages/Wyam.Tool/"&gt;.NET Core global tool package&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The big breaking change here is that Wyam now requires .NET Core 2.x to run. You must have the &lt;a href="https://www.microsoft.com/net/download"&gt;.NET Core runtime&lt;/a&gt; installed on your system to use Wyam. A .NET Framework release is no longer shipped (though that could be reconsidered if there's a big outcry about .NET Framework support).&lt;/p&gt;
&lt;h2 id="global-tool"&gt;Global Tool&lt;/h2&gt;
&lt;p&gt;The &lt;a href="https://docs.microsoft.com/en-us/dotnet/core/tools/global-tools"&gt;global tool package&lt;/a&gt; is named &lt;a href="https://www.nuget.org/packages/Wyam.Tool/"&gt;Wyam.Tool&lt;/a&gt; and you can install it like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dotnet tool install -g Wyam.Tool
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then you can use it with the &lt;code&gt;wyam&lt;/code&gt; command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wyam ...
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="zip-archive"&gt;ZIP Archive&lt;/h2&gt;
&lt;p&gt;The ZIP archive contains a .NET Core &lt;a href="https://docs.microsoft.com/en-us/dotnet/core/deploying/#framework-dependent-deployments-fdd"&gt;framework-dependent deployment&lt;/a&gt;, which means it's shipped as a DLL assembly that requires the &lt;code&gt;dotnet&lt;/code&gt; CLI bootstrapper to run. Once you download the &lt;a href="https://github.com/Wyamio/Wyam/releases"&gt;ZIP archive&lt;/a&gt; and extract it somewhere, running Wyam looks like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dotnet /path/to/wyam/Wyam.dll ...
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id="cake"&gt;Cake&lt;/h2&gt;
&lt;p&gt;If you're using Cake and the Cake addin, nothing will change (other than the requirement for having .NET Core installed).&lt;/p&gt;
&lt;h1 id="looking-ahead"&gt;Looking Ahead&lt;/h1&gt;
&lt;p&gt;A couple things will change going forward. The first is that I'll start blogging about Wyam releases and other topics here. That's in response to some &lt;a href="https://github.com/Wyamio/Wyam/issues/741"&gt;very valid criticism&lt;/a&gt; about lack of communication and frequency of breaking changes. While I'm pretty sure more breaking changes are on the horizon, I could certainly do better about detailing what they are and how to migrate.&lt;/p&gt;
&lt;h2 id="near-term"&gt;Near Term&lt;/h2&gt;
&lt;p&gt;Some bugs, particularly regarding the docs recipe, have surfaced recently while I've been focusing on .NET Core. In the near future I'll be working on squashing those and making small enhancements.&lt;/p&gt;
&lt;h2 id="long-term"&gt;Long Term&lt;/h2&gt;
&lt;p&gt;Long term, I'm going to start working on our &lt;a href="https://github.com/Wyamio/Wyam/issues/668"&gt;vNext client strategy&lt;/a&gt;. This was originally intended to ship with .NET Core support in 2.0 but as we got closer, I decided it was better to ship a 2.0 release that looks exactly like 1.x and then do bigger architecture evolution in the next major release. I suggest you read &lt;a href="https://github.com/Wyamio/Wyam/issues/668"&gt;the associated issue&lt;/a&gt; since vNext will look very different than the current version.&lt;/p&gt;
</content:encoded>
		</item>
	</channel>
</rss>